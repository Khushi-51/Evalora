{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\MyDownloads\\\\cloneonlineexamplatform1\\\\frontend\\\\src\\\\pages\\\\examiner\\\\GradeSubmission.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { submissionsAPI } from \"../../services/api\";\nimport Loader from \"../../components/common/Loader\";\nimport Modal from \"../../components/common/Modal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GradeSubmission = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [submission, setSubmission] = useState(null);\n  const [gradingData, setGradingData] = useState([]);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  useEffect(() => {\n    fetchSubmission();\n  }, [id]);\n  const fetchSubmission = async () => {\n    setLoading(true);\n    try {\n      const response = await submissionsAPI.getSubmission(id);\n      const submissionData = response.data.data;\n      setSubmission(submissionData);\n\n      // Initialize grading data for subjective questions\n      const initialGradingData = submissionData.answers.filter(answer => {\n        const questionType = answer.question.type;\n        return questionType === \"essay\" || questionType === \"coding\" || questionType === \"short-answer\" && !answer.isCorrect;\n      }).map(answer => ({\n        questionId: answer.question._id,\n        score: answer.score || 0,\n        feedback: answer.feedback || \"\",\n        maxScore: answer.question.marks,\n        questionText: answer.question.text,\n        questionType: answer.question.type,\n        studentAnswer: answer.textAnswer || answer.codeAnswer || \"\"\n      }));\n      setGradingData(initialGradingData);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching submission:\", error);\n      toast.error(\"Failed to load submission\");\n      navigate(\"/examiner/submissions\");\n    }\n  };\n  const handleScoreChange = (index, value) => {\n    const updatedGradingData = [...gradingData];\n    const maxScore = updatedGradingData[index].maxScore;\n\n    // Ensure score is within valid range\n    let score = Number.parseInt(value);\n    if (isNaN(score)) score = 0;\n    if (score < 0) score = 0;\n    if (score > maxScore) score = maxScore;\n    updatedGradingData[index].score = score;\n    setGradingData(updatedGradingData);\n  };\n  const handleFeedbackChange = (index, value) => {\n    const updatedGradingData = [...gradingData];\n    updatedGradingData[index].feedback = value;\n    setGradingData(updatedGradingData);\n  };\n  const handleSubmit = async () => {\n    setSaving(true);\n    try {\n      // Format data for API\n      const answers = gradingData.map(item => ({\n        questionId: item.questionId,\n        score: item.score,\n        feedback: item.feedback\n      }));\n\n      // Submit grading\n      await submissionsAPI.gradeSubmission(id, {\n        answers\n      });\n      toast.success(\"Submission graded successfully\");\n      navigate(\"/examiner/submissions\");\n    } catch (error) {\n      console.error(\"Error grading submission:\", error);\n      toast.error(\"Failed to grade submission\");\n      setSaving(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n  if (!submission) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: \"Submission not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n  const isReadOnly = submission.submissionStatus === \"graded\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isReadOnly ? \"View Submission\" : \"Grade Submission\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => navigate(\"/examiner/submissions\"),\n        children: \"Back to Submissions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"Submission Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Exam:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), \" \", submission.exam.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Student:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), \" \", submission.student.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Submission Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), \" \", new Date(submission.endTime || submission.startTime).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge bg-primary\",\n                children: submission.submissionStatus.replace(/_/g, \" \").toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Score:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), \" \", submission.totalScore, \" / \", submission.exam.totalMarks, \" (\", Math.round(submission.totalScore / submission.exam.totalMarks * 100), \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Result:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge ${submission.isPassed ? \"bg-success\" : \"bg-danger\"}`,\n                children: submission.isPassed ? \"PASSED\" : \"FAILED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), gradingData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No questions to grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This submission doesn't have any subjective questions that require manual grading.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-3\",\n        children: \"Questions to Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), gradingData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Student's Answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), item.questionType === \"coding\" ? /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"bg-light p-3 rounded\",\n              children: item.studentAnswer || \"No answer provided\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 bg-light rounded\",\n              children: item.studentAnswer || \"No answer provided\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `score-${index}`,\n                className: \"form-label\",\n                children: [\"Score (0-\", item.maxScore, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"form-control\",\n                id: `score-${index}`,\n                value: item.score,\n                onChange: e => handleScoreChange(index, e.target.value),\n                min: \"0\",\n                max: item.maxScore,\n                disabled: isReadOnly\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `feedback-${index}`,\n              className: \"form-label\",\n              children: \"Feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: `feedback-${index}`,\n              rows: \"3\",\n              value: item.feedback,\n              onChange: e => handleFeedbackChange(index, e.target.value),\n              placeholder: \"Provide feedback on this answer\",\n              disabled: isReadOnly\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this)\n      }, item.questionId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this)), !isReadOnly && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-end mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary me-2\",\n          onClick: () => navigate(\"/examiner/submissions\"),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: () => setShowConfirmModal(true),\n          disabled: saving,\n          children: saving ? \"Saving...\" : \"Submit Grading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showConfirmModal,\n      onClose: () => setShowConfirmModal(false),\n      title: \"Confirm Submission\",\n      footer: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => setShowConfirmModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleSubmit,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to submit this grading?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This action will finalize the student's score and cannot be undone.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(GradeSubmission, \"tCQHCER5VsU2vMTOpqwTK7QIh+c=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GradeSubmission;\nexport default GradeSubmission;\nvar _c;\n$RefreshReg$(_c, \"GradeSubmission\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useParams","useNavigate","toast","submissionsAPI","Loader","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","GradeSubmission","id","navigate","loading","setLoading","saving","setSaving","submission","setSubmission","gradingData","setGradingData","showConfirmModal","setShowConfirmModal","fetchSubmission","response","getSubmission","submissionData","data","initialGradingData","answers","filter","answer","questionType","question","type","isCorrect","map","questionId","_id","score","feedback","maxScore","marks","questionText","text","studentAnswer","textAnswer","codeAnswer","error","console","handleScoreChange","index","value","updatedGradingData","Number","parseInt","isNaN","handleFeedbackChange","handleSubmit","item","gradeSubmission","success","fileName","lineNumber","columnNumber","className","children","isReadOnly","submissionStatus","onClick","exam","title","student","name","Date","endTime","startTime","toLocaleString","replace","toUpperCase","totalScore","totalMarks","Math","round","isPassed","length","htmlFor","onChange","e","target","min","max","disabled","rows","placeholder","isOpen","onClose","footer","_c","$RefreshReg$"],"sources":["D:/MyDownloads/cloneonlineexamplatform1/frontend/src/pages/examiner/GradeSubmission.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { toast } from \"react-toastify\"\nimport { submissionsAPI } from \"../../services/api\"\nimport Loader from \"../../components/common/Loader\"\nimport Modal from \"../../components/common/Modal\"\n\nconst GradeSubmission = () => {\n  const { id } = useParams()\n  const navigate = useNavigate()\n  const [loading, setLoading] = useState(true)\n  const [saving, setSaving] = useState(false)\n  const [submission, setSubmission] = useState(null)\n  const [gradingData, setGradingData] = useState([])\n  const [showConfirmModal, setShowConfirmModal] = useState(false)\n\n  useEffect(() => {\n    fetchSubmission()\n  }, [id])\n\n  const fetchSubmission = async () => {\n    setLoading(true)\n    try {\n      const response = await submissionsAPI.getSubmission(id)\n      const submissionData = response.data.data\n\n      setSubmission(submissionData)\n\n      // Initialize grading data for subjective questions\n      const initialGradingData = submissionData.answers\n        .filter((answer) => {\n          const questionType = answer.question.type\n          return (\n            questionType === \"essay\" ||\n            questionType === \"coding\" ||\n            (questionType === \"short-answer\" && !answer.isCorrect)\n          )\n        })\n        .map((answer) => ({\n          questionId: answer.question._id,\n          score: answer.score || 0,\n          feedback: answer.feedback || \"\",\n          maxScore: answer.question.marks,\n          questionText: answer.question.text,\n          questionType: answer.question.type,\n          studentAnswer: answer.textAnswer || answer.codeAnswer || \"\",\n        }))\n\n      setGradingData(initialGradingData)\n      setLoading(false)\n    } catch (error) {\n      console.error(\"Error fetching submission:\", error)\n      toast.error(\"Failed to load submission\")\n      navigate(\"/examiner/submissions\")\n    }\n  }\n\n  const handleScoreChange = (index, value) => {\n    const updatedGradingData = [...gradingData]\n    const maxScore = updatedGradingData[index].maxScore\n\n    // Ensure score is within valid range\n    let score = Number.parseInt(value)\n    if (isNaN(score)) score = 0\n    if (score < 0) score = 0\n    if (score > maxScore) score = maxScore\n\n    updatedGradingData[index].score = score\n    setGradingData(updatedGradingData)\n  }\n\n  const handleFeedbackChange = (index, value) => {\n    const updatedGradingData = [...gradingData]\n    updatedGradingData[index].feedback = value\n    setGradingData(updatedGradingData)\n  }\n\n  const handleSubmit = async () => {\n    setSaving(true)\n    try {\n      // Format data for API\n      const answers = gradingData.map((item) => ({\n        questionId: item.questionId,\n        score: item.score,\n        feedback: item.feedback,\n      }))\n\n      // Submit grading\n      await submissionsAPI.gradeSubmission(id, { answers })\n\n      toast.success(\"Submission graded successfully\")\n      navigate(\"/examiner/submissions\")\n    } catch (error) {\n      console.error(\"Error grading submission:\", error)\n      toast.error(\"Failed to grade submission\")\n      setSaving(false)\n    }\n  }\n\n  if (loading) {\n    return <Loader />\n  }\n\n  if (!submission) {\n    return (\n      <div className=\"container py-4\">\n        <div className=\"alert alert-danger\">Submission not found</div>\n      </div>\n    )\n  }\n\n  const isReadOnly = submission.submissionStatus === \"graded\"\n\n  return (\n    <div className=\"container py-4\">\n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\n        <h1>{isReadOnly ? \"View Submission\" : \"Grade Submission\"}</h1>\n        <button className=\"btn btn-secondary\" onClick={() => navigate(\"/examiner/submissions\")}>\n          Back to Submissions\n        </button>\n      </div>\n\n      <div className=\"card mb-4\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Submission Details</h5>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <p>\n                <strong>Exam:</strong> {submission.exam.title}\n              </p>\n              <p>\n                <strong>Student:</strong> {submission.student.name}\n              </p>\n              <p>\n                <strong>Submission Date:</strong>{\" \"}\n                {new Date(submission.endTime || submission.startTime).toLocaleString()}\n              </p>\n            </div>\n            <div className=\"col-md-6\">\n              <p>\n                <strong>Status:</strong>{\" \"}\n                <span className=\"badge bg-primary\">{submission.submissionStatus.replace(/_/g, \" \").toUpperCase()}</span>\n              </p>\n              <p>\n                <strong>Score:</strong> {submission.totalScore} / {submission.exam.totalMarks} (\n                {Math.round((submission.totalScore / submission.exam.totalMarks) * 100)}%)\n              </p>\n              <p>\n                <strong>Result:</strong>{\" \"}\n                <span className={`badge ${submission.isPassed ? \"bg-success\" : \"bg-danger\"}`}>\n                  {submission.isPassed ? \"PASSED\" : \"FAILED\"}\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {gradingData.length === 0 ? (\n        <div className=\"card p-4 text-center\">\n          <h3>No questions to grade</h3>\n          <p>This submission doesn't have any subjective questions that require manual grading.</p>\n        </div>\n      ) : (\n        <>\n          <h2 className=\"mb-3\">Questions to Grade</h2>\n          {gradingData.map((item, index) => (\n            <div key={item.questionId} className=\"card mb-4\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Question {index + 1}</h5>\n                <p>{item.questionText}</p>\n\n                <div className=\"mb-3\">\n                  <h6>Student's Answer:</h6>\n                  {item.questionType === \"coding\" ? (\n                    <pre className=\"bg-light p-3 rounded\">{item.studentAnswer || \"No answer provided\"}</pre>\n                  ) : (\n                    <div className=\"p-3 bg-light rounded\">{item.studentAnswer || \"No answer provided\"}</div>\n                  )}\n                </div>\n\n                <div className=\"row mb-3\">\n                  <div className=\"col-md-6\">\n                    <label htmlFor={`score-${index}`} className=\"form-label\">\n                      Score (0-{item.maxScore})\n                    </label>\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      id={`score-${index}`}\n                      value={item.score}\n                      onChange={(e) => handleScoreChange(index, e.target.value)}\n                      min=\"0\"\n                      max={item.maxScore}\n                      disabled={isReadOnly}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"mb-3\">\n                  <label htmlFor={`feedback-${index}`} className=\"form-label\">\n                    Feedback\n                  </label>\n                  <textarea\n                    className=\"form-control\"\n                    id={`feedback-${index}`}\n                    rows=\"3\"\n                    value={item.feedback}\n                    onChange={(e) => handleFeedbackChange(index, e.target.value)}\n                    placeholder=\"Provide feedback on this answer\"\n                    disabled={isReadOnly}\n                  ></textarea>\n                </div>\n              </div>\n            </div>\n          ))}\n\n          {!isReadOnly && (\n            <div className=\"d-flex justify-content-end mb-5\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary me-2\"\n                onClick={() => navigate(\"/examiner/submissions\")}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={() => setShowConfirmModal(true)}\n                disabled={saving}\n              >\n                {saving ? \"Saving...\" : \"Submit Grading\"}\n              </button>\n            </div>\n          )}\n        </>\n      )}\n\n      {/* Confirmation Modal */}\n      <Modal\n        isOpen={showConfirmModal}\n        onClose={() => setShowConfirmModal(false)}\n        title=\"Confirm Submission\"\n        footer={\n          <>\n            <button className=\"btn btn-secondary\" onClick={() => setShowConfirmModal(false)}>\n              Cancel\n            </button>\n            <button className=\"btn btn-primary\" onClick={handleSubmit}>\n              Confirm\n            </button>\n          </>\n        }\n      >\n        <p>Are you sure you want to submit this grading?</p>\n        <p>This action will finalize the student's score and cannot be undone.</p>\n      </Modal>\n    </div>\n  )\n}\n\nexport default GradeSubmission\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}