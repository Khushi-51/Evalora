{"ast":null,"code":"import { io } from \"socket.io-client\";\nlet socket;\nexport const initSocket = token => {\n  if (socket) {\n    socket.disconnect();\n  }\n\n  // Initialize socket connection with auth token\n  socket = io(process.env.REACT_APP_SOCKET_URL || \"\", {\n    auth: {\n      token\n    },\n    transports: [\"websocket\", \"polling\"]\n  });\n  socket.on(\"connect\", () => {\n    console.log(\"Socket connected:\", socket.id);\n  });\n  socket.on(\"disconnect\", () => {\n    console.log(\"Socket disconnected\");\n  });\n  socket.on(\"connect_error\", error => {\n    console.error(\"Socket connection error:\", error);\n  });\n  return socket;\n};\nexport const getSocket = () => {\n  if (!socket) {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      return initSocket(token);\n    }\n    return null;\n  }\n  return socket;\n};\nexport const joinExam = examId => {\n  const socket = getSocket();\n  if (socket) {\n    socket.emit(\"join-exam\", examId);\n  }\n};\nexport const startExam = (examId, userId, timeRemaining) => {\n  const socket = getSocket();\n  if (socket) {\n    socket.emit(\"exam-started\", {\n      examId,\n      userId,\n      timeRemaining\n    });\n  }\n};\nexport const syncTime = (examId, userId, timeRemaining) => {\n  const socket = getSocket();\n  if (socket) {\n    socket.emit(\"sync-time\", {\n      examId,\n      userId,\n      timeRemaining\n    });\n  }\n};\nexport const sendProctoringAlert = (examId, userId, alertType, details) => {\n  const socket = getSocket();\n  if (socket) {\n    socket.emit(\"proctoring-alert\", {\n      examId,\n      userId,\n      alertType,\n      details\n    });\n  }\n};\nexport const joinMonitoring = examId => {\n  const socket = getSocket();\n  if (socket) {\n    socket.emit(\"join-monitoring\", examId);\n  }\n};\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n  }\n};\nexport default {\n  initSocket,\n  getSocket,\n  joinExam,\n  startExam,\n  syncTime,\n  sendProctoringAlert,\n  joinMonitoring,\n  disconnectSocket\n};","map":{"version":3,"names":["io","socket","initSocket","token","disconnect","process","env","REACT_APP_SOCKET_URL","auth","transports","on","console","log","id","error","getSocket","localStorage","getItem","joinExam","examId","emit","startExam","userId","timeRemaining","syncTime","sendProctoringAlert","alertType","details","joinMonitoring","disconnectSocket"],"sources":["D:/MyDownloads/cloneonlineexamplatform1/frontend/src/services/socket.js"],"sourcesContent":["import { io } from \"socket.io-client\"\n\nlet socket\n\nexport const initSocket = (token) => {\n  if (socket) {\n    socket.disconnect()\n  }\n\n  // Initialize socket connection with auth token\n  socket = io(process.env.REACT_APP_SOCKET_URL || \"\", {\n    auth: {\n      token,\n    },\n    transports: [\"websocket\", \"polling\"],\n  })\n\n  socket.on(\"connect\", () => {\n    console.log(\"Socket connected:\", socket.id)\n  })\n\n  socket.on(\"disconnect\", () => {\n    console.log(\"Socket disconnected\")\n  })\n\n  socket.on(\"connect_error\", (error) => {\n    console.error(\"Socket connection error:\", error)\n  })\n\n  return socket\n}\n\nexport const getSocket = () => {\n  if (!socket) {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      return initSocket(token)\n    }\n    return null\n  }\n  return socket\n}\n\nexport const joinExam = (examId) => {\n  const socket = getSocket()\n  if (socket) {\n    socket.emit(\"join-exam\", examId)\n  }\n}\n\nexport const startExam = (examId, userId, timeRemaining) => {\n  const socket = getSocket()\n  if (socket) {\n    socket.emit(\"exam-started\", { examId, userId, timeRemaining })\n  }\n}\n\nexport const syncTime = (examId, userId, timeRemaining) => {\n  const socket = getSocket()\n  if (socket) {\n    socket.emit(\"sync-time\", { examId, userId, timeRemaining })\n  }\n}\n\nexport const sendProctoringAlert = (examId, userId, alertType, details) => {\n  const socket = getSocket()\n  if (socket) {\n    socket.emit(\"proctoring-alert\", { examId, userId, alertType, details })\n  }\n}\n\nexport const joinMonitoring = (examId) => {\n  const socket = getSocket()\n  if (socket) {\n    socket.emit(\"join-monitoring\", examId)\n  }\n}\n\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect()\n    socket = null\n  }\n}\n\nexport default {\n  initSocket,\n  getSocket,\n  joinExam,\n  startExam,\n  syncTime,\n  sendProctoringAlert,\n  joinMonitoring,\n  disconnectSocket,\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}