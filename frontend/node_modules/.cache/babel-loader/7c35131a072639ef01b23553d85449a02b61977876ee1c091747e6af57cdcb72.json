{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\MyDownloads\\\\cloneonlineexamplatform1\\\\frontend\\\\src\\\\pages\\\\examiner\\\\EditQuestion.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { questionsAPI } from \"../../services/api\";\nimport Loader from \"../../components/common/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditQuestion = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [formData, setFormData] = useState({\n    text: \"\",\n    type: \"mcq-single\",\n    options: [{\n      text: \"\",\n      isCorrect: false\n    }, {\n      text: \"\",\n      isCorrect: false\n    }, {\n      text: \"\",\n      isCorrect: false\n    }, {\n      text: \"\",\n      isCorrect: false\n    }],\n    correctAnswer: \"\",\n    marks: 1,\n    difficulty: \"medium\",\n    explanation: \"\",\n    tags: \"\",\n    category: \"\",\n    image: \"\",\n    code: \"\",\n    codeLanguage: \"\",\n    gradingCriteria: \"\",\n    keywordExpectations: \"\",\n    plagiarismThreshold: 80\n  });\n  const [formErrors, setFormErrors] = useState({});\n  useEffect(() => {\n    fetchQuestionData();\n  }, [id]);\n  const fetchQuestionData = async () => {\n    setLoading(true);\n    try {\n      const response = await questionsAPI.getQuestion(id);\n      const questionData = response.data.data;\n\n      // Format tags and keywords for form\n      const tagsString = questionData.tags ? questionData.tags.join(\", \") : \"\";\n      const keywordsString = questionData.keywordExpectations ? questionData.keywordExpectations.join(\", \") : \"\";\n\n      // Ensure options array has at least 2 items for MCQ\n      let options = questionData.options || [];\n      if ([\"mcq-single\", \"mcq-multiple\"].includes(questionData.type) && options.length < 2) {\n        options = [...options, {\n          text: \"\",\n          isCorrect: false\n        }, {\n          text: \"\",\n          isCorrect: false\n        }];\n      }\n\n      // For true-false, ensure we have exactly two options\n      if (questionData.type === \"true-false\") {\n        if (!options.length) {\n          options = [{\n            text: \"True\",\n            isCorrect: false\n          }, {\n            text: \"False\",\n            isCorrect: false\n          }];\n        }\n      }\n      setFormData({\n        ...questionData,\n        options,\n        tags: tagsString,\n        keywordExpectations: keywordsString\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching question:\", error);\n      toast.error(\"Failed to load question data\");\n      navigate(\"/examiner/questions\");\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === \"checkbox\") {\n      setFormData({\n        ...formData,\n        [name]: checked\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n\n    // Clear error when user types\n    if (formErrors[name]) {\n      setFormErrors({\n        ...formErrors,\n        [name]: \"\"\n      });\n    }\n  };\n  const handleOptionChange = (index, field, value) => {\n    const updatedOptions = [...formData.options];\n    updatedOptions[index] = {\n      ...updatedOptions[index],\n      [field]: value\n    };\n\n    // For single choice, ensure only one option is correct\n    if (field === \"isCorrect\" && value === true && formData.type === \"mcq-single\") {\n      updatedOptions.forEach((option, i) => {\n        if (i !== index) {\n          updatedOptions[i].isCorrect = false;\n        }\n      });\n    }\n    setFormData({\n      ...formData,\n      options: updatedOptions\n    });\n  };\n  const addOption = () => {\n    setFormData({\n      ...formData,\n      options: [...formData.options, {\n        text: \"\",\n        isCorrect: false\n      }]\n    });\n  };\n  const removeOption = index => {\n    const updatedOptions = [...formData.options];\n    updatedOptions.splice(index, 1);\n    setFormData({\n      ...formData,\n      options: updatedOptions\n    });\n  };\n  const handleTagsChange = e => {\n    setFormData({\n      ...formData,\n      tags: e.target.value\n    });\n  };\n  const handleKeywordExpectationsChange = e => {\n    setFormData({\n      ...formData,\n      keywordExpectations: e.target.value\n    });\n  };\n  const validateForm = () => {\n    const errors = {};\n    if (!formData.text) errors.text = \"Question text is required\";\n    if (!formData.marks || formData.marks <= 0) errors.marks = \"Marks must be greater than 0\";\n\n    // Validate options for MCQ and true-false\n    if ([\"mcq-single\", \"mcq-multiple\", \"true-false\"].includes(formData.type)) {\n      // Check if at least 2 options are provided\n      const filledOptions = formData.options.filter(option => option.text.trim() !== \"\");\n      if (filledOptions.length < 2) {\n        errors.options = \"At least 2 options are required\";\n      }\n\n      // Check if at least one option is marked as correct\n      const hasCorrectOption = formData.options.some(option => option.isCorrect);\n      if (!hasCorrectOption) {\n        errors.correctOption = \"At least one option must be marked as correct\";\n      }\n    }\n\n    // Validate correct answer for short-answer\n    if (formData.type === \"short-answer\" && !formData.correctAnswer) {\n      errors.correctAnswer = \"Correct answer is required for short-answer questions\";\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      toast.error(\"Please fix the errors in the form\");\n      return;\n    }\n    setSaving(true);\n    try {\n      // Prepare data for submission\n      const questionData = {\n        ...formData,\n        tags: formData.tags ? formData.tags.split(\",\").map(tag => tag.trim()) : [],\n        keywordExpectations: formData.keywordExpectations ? formData.keywordExpectations.split(\",\").map(keyword => keyword.trim()) : []\n      };\n\n      // Update question\n      await questionsAPI.updateQuestion(id, questionData);\n      toast.success(\"Question updated successfully\");\n      navigate(\"/examiner/questions\");\n    } catch (error) {\n      console.error(\"Error updating question:\", error);\n      toast.error(\"Failed to update question\");\n      setSaving(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => navigate(\"/examiner/questions\"),\n        children: \"Back to Question Bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: \"Question Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"text\",\n              children: \"Question Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: `form-control ${formErrors.text ? \"is-invalid\" : \"\"}`,\n              id: \"text\",\n              name: \"text\",\n              rows: \"3\",\n              value: formData.text,\n              onChange: handleChange,\n              placeholder: \"Enter the question text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), formErrors.text && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: formErrors.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"type\",\n                  children: \"Question Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  id: \"type\",\n                  name: \"type\",\n                  value: formData.type,\n                  onChange: handleChange,\n                  disabled: true // Type cannot be changed after creation\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"mcq-single\",\n                    children: \"Multiple Choice (Single)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"mcq-multiple\",\n                    children: \"Multiple Choice (Multiple)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"true-false\",\n                    children: \"True/False\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"short-answer\",\n                    children: \"Short Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"essay\",\n                    children: \"Essay\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"coding\",\n                    children: \"Coding\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"form-text text-muted\",\n                  children: \"Question type cannot be changed after creation.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"difficulty\",\n                  children: \"Difficulty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  id: \"difficulty\",\n                  name: \"difficulty\",\n                  value: formData.difficulty,\n                  onChange: handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"easy\",\n                    children: \"Easy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"medium\",\n                    children: \"Medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"hard\",\n                    children: \"Hard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"marks\",\n                  children: \"Marks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: `form-control ${formErrors.marks ? \"is-invalid\" : \"\"}`,\n                  id: \"marks\",\n                  name: \"marks\",\n                  value: formData.marks,\n                  onChange: handleChange,\n                  min: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this), formErrors.marks && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: formErrors.marks\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"category\",\n              name: \"category\",\n              value: formData.category,\n              onChange: handleChange,\n              placeholder: \"E.g., Mathematics, Programming, Science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tags\",\n              children: \"Tags (comma-separated)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"tags\",\n              name: \"tags\",\n              value: formData.tags,\n              onChange: handleTagsChange,\n              placeholder: \"E.g., algebra, calculus, functions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              children: \"Image URL (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"image\",\n              name: \"image\",\n              value: formData.image,\n              onChange: handleChange,\n              placeholder: \"URL to an image for this question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), [\"mcq-single\", \"mcq-multiple\", \"true-false\"].includes(formData.type) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), formErrors.options && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: formErrors.options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 38\n          }, this), formErrors.correctOption && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: formErrors.correctOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 44\n          }, this), formData.type === \"true-false\" ?\n          /*#__PURE__*/\n          // True/False options\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                className: \"form-check-input\",\n                id: \"optionTrue\",\n                checked: formData.options[0].isCorrect,\n                onChange: () => {\n                  const updatedOptions = [{\n                    text: \"True\",\n                    isCorrect: true\n                  }, {\n                    text: \"False\",\n                    isCorrect: false\n                  }];\n                  setFormData({\n                    ...formData,\n                    options: updatedOptions\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"optionTrue\",\n                children: \"True is the correct answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                className: \"form-check-input\",\n                id: \"optionFalse\",\n                checked: formData.options[1].isCorrect,\n                onChange: () => {\n                  const updatedOptions = [{\n                    text: \"True\",\n                    isCorrect: false\n                  }, {\n                    text: \"False\",\n                    isCorrect: true\n                  }];\n                  setFormData({\n                    ...formData,\n                    options: updatedOptions\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"optionFalse\",\n                children: \"False is the correct answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this) :\n          /*#__PURE__*/\n          // MCQ options\n          _jsxDEV(\"div\", {\n            children: [formData.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3 align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-8\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  placeholder: `Option ${index + 1}`,\n                  value: option.text,\n                  onChange: e => handleOptionChange(index, \"text\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: formData.type === \"mcq-single\" ? \"radio\" : \"checkbox\",\n                    className: \"form-check-input\",\n                    id: `option${index}`,\n                    checked: option.isCorrect,\n                    onChange: e => handleOptionChange(index, \"isCorrect\", e.target.checked),\n                    name: formData.type === \"mcq-single\" ? \"correctOption\" : \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    htmlFor: `option${index}`,\n                    children: \"Correct\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-1\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-sm btn-danger\",\n                  onClick: () => removeOption(index),\n                  disabled: formData.options.length <= 2,\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-sm btn-secondary\",\n              onClick: addOption,\n              children: \"Add Option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this), formData.type === \"short-answer\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: \"Correct Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${formErrors.correctAnswer ? \"is-invalid\" : \"\"}`,\n              id: \"correctAnswer\",\n              name: \"correctAnswer\",\n              value: formData.correctAnswer,\n              onChange: handleChange,\n              placeholder: \"Enter the correct answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), formErrors.correctAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: formErrors.correctAnswer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this), formData.type === \"coding\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: \"Code Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"codeLanguage\",\n              children: \"Programming Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"codeLanguage\",\n              name: \"codeLanguage\",\n              value: formData.codeLanguage,\n              onChange: handleChange,\n              placeholder: \"E.g., javascript, python, java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"code\",\n              children: \"Code Snippet (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"code\",\n              name: \"code\",\n              rows: \"5\",\n              value: formData.code,\n              onChange: handleChange,\n              placeholder: \"Enter a code snippet for this question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this), [\"essay\", \"short-answer\", \"coding\"].includes(formData.type) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: \"Grading Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"gradingCriteria\",\n              children: \"Grading Criteria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"gradingCriteria\",\n              name: \"gradingCriteria\",\n              rows: \"3\",\n              value: formData.gradingCriteria,\n              onChange: handleChange,\n              placeholder: \"Enter criteria for grading this question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"keywordExpectations\",\n              children: \"Expected Keywords (comma-separated)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"keywordExpectations\",\n              name: \"keywordExpectations\",\n              value: formData.keywordExpectations,\n              onChange: handleKeywordExpectationsChange,\n              placeholder: \"E.g., algorithm, complexity, efficiency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"plagiarismThreshold\",\n              children: \"Plagiarism Threshold (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: \"plagiarismThreshold\",\n              name: \"plagiarismThreshold\",\n              value: formData.plagiarismThreshold,\n              onChange: handleChange,\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: \"Explanation (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"explanation\",\n              name: \"explanation\",\n              rows: \"3\",\n              value: formData.explanation,\n              onChange: handleChange,\n              placeholder: \"Enter an explanation for the correct answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => navigate(\"/examiner/questions\"),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: saving,\n          children: saving ? \"Saving...\" : \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(EditQuestion, \"AD1FwENEeUfozGMuRKvhkygluRU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditQuestion;\nexport default EditQuestion;\nvar _c;\n$RefreshReg$(_c, \"EditQuestion\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useParams","useNavigate","toast","questionsAPI","Loader","jsxDEV","_jsxDEV","EditQuestion","id","navigate","loading","setLoading","saving","setSaving","formData","setFormData","text","type","options","isCorrect","correctAnswer","marks","difficulty","explanation","tags","category","image","code","codeLanguage","gradingCriteria","keywordExpectations","plagiarismThreshold","formErrors","setFormErrors","fetchQuestionData","response","getQuestion","questionData","data","tagsString","join","keywordsString","includes","length","error","console","handleChange","e","name","value","checked","target","handleOptionChange","index","field","updatedOptions","forEach","option","i","addOption","removeOption","splice","handleTagsChange","handleKeywordExpectationsChange","validateForm","errors","filledOptions","filter","trim","hasCorrectOption","some","correctOption","Object","keys","handleSubmit","preventDefault","split","map","tag","keyword","updateQuestion","success","fileName","lineNumber","columnNumber","className","children","onClick","onSubmit","htmlFor","rows","onChange","placeholder","disabled","min","max","_c","$RefreshReg$"],"sources":["D:/MyDownloads/cloneonlineexamplatform1/frontend/src/pages/examiner/EditQuestion.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { toast } from \"react-toastify\"\nimport { questionsAPI } from \"../../services/api\"\nimport Loader from \"../../components/common/Loader\"\n\nconst EditQuestion = () => {\n  const { id } = useParams()\n  const navigate = useNavigate()\n  const [loading, setLoading] = useState(true)\n  const [saving, setSaving] = useState(false)\n  const [formData, setFormData] = useState({\n    text: \"\",\n    type: \"mcq-single\",\n    options: [\n      { text: \"\", isCorrect: false },\n      { text: \"\", isCorrect: false },\n      { text: \"\", isCorrect: false },\n      { text: \"\", isCorrect: false },\n    ],\n    correctAnswer: \"\",\n    marks: 1,\n    difficulty: \"medium\",\n    explanation: \"\",\n    tags: \"\",\n    category: \"\",\n    image: \"\",\n    code: \"\",\n    codeLanguage: \"\",\n    gradingCriteria: \"\",\n    keywordExpectations: \"\",\n    plagiarismThreshold: 80,\n  })\n  const [formErrors, setFormErrors] = useState({})\n\n  useEffect(() => {\n    fetchQuestionData()\n  }, [id])\n\n  const fetchQuestionData = async () => {\n    setLoading(true)\n    try {\n      const response = await questionsAPI.getQuestion(id)\n      const questionData = response.data.data\n\n      // Format tags and keywords for form\n      const tagsString = questionData.tags ? questionData.tags.join(\", \") : \"\"\n      const keywordsString = questionData.keywordExpectations ? questionData.keywordExpectations.join(\", \") : \"\"\n\n      // Ensure options array has at least 2 items for MCQ\n      let options = questionData.options || []\n      if ([\"mcq-single\", \"mcq-multiple\"].includes(questionData.type) && options.length < 2) {\n        options = [...options, { text: \"\", isCorrect: false }, { text: \"\", isCorrect: false }]\n      }\n\n      // For true-false, ensure we have exactly two options\n      if (questionData.type === \"true-false\") {\n        if (!options.length) {\n          options = [\n            { text: \"True\", isCorrect: false },\n            { text: \"False\", isCorrect: false },\n          ]\n        }\n      }\n\n      setFormData({\n        ...questionData,\n        options,\n        tags: tagsString,\n        keywordExpectations: keywordsString,\n      })\n\n      setLoading(false)\n    } catch (error) {\n      console.error(\"Error fetching question:\", error)\n      toast.error(\"Failed to load question data\")\n      navigate(\"/examiner/questions\")\n    }\n  }\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target\n\n    if (type === \"checkbox\") {\n      setFormData({ ...formData, [name]: checked })\n    } else {\n      setFormData({ ...formData, [name]: value })\n    }\n\n    // Clear error when user types\n    if (formErrors[name]) {\n      setFormErrors({ ...formErrors, [name]: \"\" })\n    }\n  }\n\n  const handleOptionChange = (index, field, value) => {\n    const updatedOptions = [...formData.options]\n    updatedOptions[index] = { ...updatedOptions[index], [field]: value }\n\n    // For single choice, ensure only one option is correct\n    if (field === \"isCorrect\" && value === true && formData.type === \"mcq-single\") {\n      updatedOptions.forEach((option, i) => {\n        if (i !== index) {\n          updatedOptions[i].isCorrect = false\n        }\n      })\n    }\n\n    setFormData({ ...formData, options: updatedOptions })\n  }\n\n  const addOption = () => {\n    setFormData({\n      ...formData,\n      options: [...formData.options, { text: \"\", isCorrect: false }],\n    })\n  }\n\n  const removeOption = (index) => {\n    const updatedOptions = [...formData.options]\n    updatedOptions.splice(index, 1)\n    setFormData({ ...formData, options: updatedOptions })\n  }\n\n  const handleTagsChange = (e) => {\n    setFormData({ ...formData, tags: e.target.value })\n  }\n\n  const handleKeywordExpectationsChange = (e) => {\n    setFormData({ ...formData, keywordExpectations: e.target.value })\n  }\n\n  const validateForm = () => {\n    const errors = {}\n    if (!formData.text) errors.text = \"Question text is required\"\n    if (!formData.marks || formData.marks <= 0) errors.marks = \"Marks must be greater than 0\"\n\n    // Validate options for MCQ and true-false\n    if ([\"mcq-single\", \"mcq-multiple\", \"true-false\"].includes(formData.type)) {\n      // Check if at least 2 options are provided\n      const filledOptions = formData.options.filter((option) => option.text.trim() !== \"\")\n      if (filledOptions.length < 2) {\n        errors.options = \"At least 2 options are required\"\n      }\n\n      // Check if at least one option is marked as correct\n      const hasCorrectOption = formData.options.some((option) => option.isCorrect)\n      if (!hasCorrectOption) {\n        errors.correctOption = \"At least one option must be marked as correct\"\n      }\n    }\n\n    // Validate correct answer for short-answer\n    if (formData.type === \"short-answer\" && !formData.correctAnswer) {\n      errors.correctAnswer = \"Correct answer is required for short-answer questions\"\n    }\n\n    setFormErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (!validateForm()) {\n      toast.error(\"Please fix the errors in the form\")\n      return\n    }\n\n    setSaving(true)\n    try {\n      // Prepare data for submission\n      const questionData = {\n        ...formData,\n        tags: formData.tags ? formData.tags.split(\",\").map((tag) => tag.trim()) : [],\n        keywordExpectations: formData.keywordExpectations\n          ? formData.keywordExpectations.split(\",\").map((keyword) => keyword.trim())\n          : [],\n      }\n\n      // Update question\n      await questionsAPI.updateQuestion(id, questionData)\n\n      toast.success(\"Question updated successfully\")\n      navigate(\"/examiner/questions\")\n    } catch (error) {\n      console.error(\"Error updating question:\", error)\n      toast.error(\"Failed to update question\")\n      setSaving(false)\n    }\n  }\n\n  if (loading) {\n    return <Loader />\n  }\n\n  return (\n    <div className=\"container py-4\">\n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\n        <h1>Edit Question</h1>\n        <button className=\"btn btn-secondary\" onClick={() => navigate(\"/examiner/questions\")}>\n          Back to Question Bank\n        </button>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"card mb-4\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Question Information</h5>\n\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"text\">Question Text</label>\n              <textarea\n                className={`form-control ${formErrors.text ? \"is-invalid\" : \"\"}`}\n                id=\"text\"\n                name=\"text\"\n                rows=\"3\"\n                value={formData.text}\n                onChange={handleChange}\n                placeholder=\"Enter the question text\"\n              ></textarea>\n              {formErrors.text && <div className=\"invalid-feedback\">{formErrors.text}</div>}\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <div className=\"form-group mb-3\">\n                  <label htmlFor=\"type\">Question Type</label>\n                  <select\n                    className=\"form-select\"\n                    id=\"type\"\n                    name=\"type\"\n                    value={formData.type}\n                    onChange={handleChange}\n                    disabled // Type cannot be changed after creation\n                  >\n                    <option value=\"mcq-single\">Multiple Choice (Single)</option>\n                    <option value=\"mcq-multiple\">Multiple Choice (Multiple)</option>\n                    <option value=\"true-false\">True/False</option>\n                    <option value=\"short-answer\">Short Answer</option>\n                    <option value=\"essay\">Essay</option>\n                    <option value=\"coding\">Coding</option>\n                  </select>\n                  <small className=\"form-text text-muted\">Question type cannot be changed after creation.</small>\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"form-group mb-3\">\n                  <label htmlFor=\"difficulty\">Difficulty</label>\n                  <select\n                    className=\"form-select\"\n                    id=\"difficulty\"\n                    name=\"difficulty\"\n                    value={formData.difficulty}\n                    onChange={handleChange}\n                  >\n                    <option value=\"easy\">Easy</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"hard\">Hard</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"form-group mb-3\">\n                  <label htmlFor=\"marks\">Marks</label>\n                  <input\n                    type=\"number\"\n                    className={`form-control ${formErrors.marks ? \"is-invalid\" : \"\"}`}\n                    id=\"marks\"\n                    name=\"marks\"\n                    value={formData.marks}\n                    onChange={handleChange}\n                    min=\"1\"\n                  />\n                  {formErrors.marks && <div className=\"invalid-feedback\">{formErrors.marks}</div>}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"category\">Category</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"category\"\n                name=\"category\"\n                value={formData.category}\n                onChange={handleChange}\n                placeholder=\"E.g., Mathematics, Programming, Science\"\n              />\n            </div>\n\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"tags\">Tags (comma-separated)</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"tags\"\n                name=\"tags\"\n                value={formData.tags}\n                onChange={handleTagsChange}\n                placeholder=\"E.g., algebra, calculus, functions\"\n              />\n            </div>\n\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"image\">Image URL (optional)</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"image\"\n                name=\"image\"\n                value={formData.image}\n                onChange={handleChange}\n                placeholder=\"URL to an image for this question\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Options for MCQ and True/False */}\n        {[\"mcq-single\", \"mcq-multiple\", \"true-false\"].includes(formData.type) && (\n          <div className=\"card mb-4\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Options</h5>\n              {formErrors.options && <div className=\"alert alert-danger\">{formErrors.options}</div>}\n              {formErrors.correctOption && <div className=\"alert alert-danger\">{formErrors.correctOption}</div>}\n\n              {formData.type === \"true-false\" ? (\n                // True/False options\n                <div>\n                  <div className=\"form-check mb-3\">\n                    <input\n                      type=\"radio\"\n                      className=\"form-check-input\"\n                      id=\"optionTrue\"\n                      checked={formData.options[0].isCorrect}\n                      onChange={() => {\n                        const updatedOptions = [\n                          { text: \"True\", isCorrect: true },\n                          { text: \"False\", isCorrect: false },\n                        ]\n                        setFormData({ ...formData, options: updatedOptions })\n                      }}\n                    />\n                    <label className=\"form-check-label\" htmlFor=\"optionTrue\">\n                      True is the correct answer\n                    </label>\n                  </div>\n                  <div className=\"form-check mb-3\">\n                    <input\n                      type=\"radio\"\n                      className=\"form-check-input\"\n                      id=\"optionFalse\"\n                      checked={formData.options[1].isCorrect}\n                      onChange={() => {\n                        const updatedOptions = [\n                          { text: \"True\", isCorrect: false },\n                          { text: \"False\", isCorrect: true },\n                        ]\n                        setFormData({ ...formData, options: updatedOptions })\n                      }}\n                    />\n                    <label className=\"form-check-label\" htmlFor=\"optionFalse\">\n                      False is the correct answer\n                    </label>\n                  </div>\n                </div>\n              ) : (\n                // MCQ options\n                <div>\n                  {formData.options.map((option, index) => (\n                    <div key={index} className=\"row mb-3 align-items-center\">\n                      <div className=\"col-md-8\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder={`Option ${index + 1}`}\n                          value={option.text}\n                          onChange={(e) => handleOptionChange(index, \"text\", e.target.value)}\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <div className=\"form-check\">\n                          <input\n                            type={formData.type === \"mcq-single\" ? \"radio\" : \"checkbox\"}\n                            className=\"form-check-input\"\n                            id={`option${index}`}\n                            checked={option.isCorrect}\n                            onChange={(e) => handleOptionChange(index, \"isCorrect\", e.target.checked)}\n                            name={formData.type === \"mcq-single\" ? \"correctOption\" : \"\"}\n                          />\n                          <label className=\"form-check-label\" htmlFor={`option${index}`}>\n                            Correct\n                          </label>\n                        </div>\n                      </div>\n                      <div className=\"col-md-1\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-sm btn-danger\"\n                          onClick={() => removeOption(index)}\n                          disabled={formData.options.length <= 2}\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                  <button type=\"button\" className=\"btn btn-sm btn-secondary\" onClick={addOption}>\n                    Add Option\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Correct Answer for Short Answer */}\n        {formData.type === \"short-answer\" && (\n          <div className=\"card mb-4\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Correct Answer</h5>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={`form-control ${formErrors.correctAnswer ? \"is-invalid\" : \"\"}`}\n                  id=\"correctAnswer\"\n                  name=\"correctAnswer\"\n                  value={formData.correctAnswer}\n                  onChange={handleChange}\n                  placeholder=\"Enter the correct answer\"\n                />\n                {formErrors.correctAnswer && <div className=\"invalid-feedback\">{formErrors.correctAnswer}</div>}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Code for Coding Questions */}\n        {formData.type === \"coding\" && (\n          <div className=\"card mb-4\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Code Information</h5>\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"codeLanguage\">Programming Language</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"codeLanguage\"\n                  name=\"codeLanguage\"\n                  value={formData.codeLanguage}\n                  onChange={handleChange}\n                  placeholder=\"E.g., javascript, python, java\"\n                />\n              </div>\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"code\">Code Snippet (optional)</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"code\"\n                  name=\"code\"\n                  rows=\"5\"\n                  value={formData.code}\n                  onChange={handleChange}\n                  placeholder=\"Enter a code snippet for this question\"\n                ></textarea>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Grading Information for Subjective Questions */}\n        {[\"essay\", \"short-answer\", \"coding\"].includes(formData.type) && (\n          <div className=\"card mb-4\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Grading Information</h5>\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"gradingCriteria\">Grading Criteria</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"gradingCriteria\"\n                  name=\"gradingCriteria\"\n                  rows=\"3\"\n                  value={formData.gradingCriteria}\n                  onChange={handleChange}\n                  placeholder=\"Enter criteria for grading this question\"\n                ></textarea>\n              </div>\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"keywordExpectations\">Expected Keywords (comma-separated)</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"keywordExpectations\"\n                  name=\"keywordExpectations\"\n                  value={formData.keywordExpectations}\n                  onChange={handleKeywordExpectationsChange}\n                  placeholder=\"E.g., algorithm, complexity, efficiency\"\n                />\n              </div>\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"plagiarismThreshold\">Plagiarism Threshold (%)</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  id=\"plagiarismThreshold\"\n                  name=\"plagiarismThreshold\"\n                  value={formData.plagiarismThreshold}\n                  onChange={handleChange}\n                  min=\"0\"\n                  max=\"100\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Explanation */}\n        <div className=\"card mb-4\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Explanation (Optional)</h5>\n            <div className=\"form-group\">\n              <textarea\n                className=\"form-control\"\n                id=\"explanation\"\n                name=\"explanation\"\n                rows=\"3\"\n                value={formData.explanation}\n                onChange={handleChange}\n                placeholder=\"Enter an explanation for the correct answer\"\n              ></textarea>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"d-flex justify-content-between\">\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => navigate(\"/examiner/questions\")}>\n            Cancel\n          </button>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={saving}>\n            {saving ? \"Saving...\" : \"Save Changes\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default EditQuestion\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}