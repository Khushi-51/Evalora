{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\MyDownloads\\\\cloneonlineexamplatform1\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { authAPI } from \"../services/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Load user from localStorage on initial render\n  useEffect(() => {\n    const loadUser = async () => {\n      if (token) {\n        try {\n          const res = await authAPI.getProfile();\n          setUser(res.data.data);\n        } catch (err) {\n          console.error(\"Failed to load user:\", err);\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"user\");\n          setToken(null);\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n    loadUser();\n  }, [token]);\n\n  // Register user\n  const register = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await authAPI.register(userData);\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n      setToken(res.data.token);\n      setUser(res.data.user);\n      setLoading(false);\n\n      // Redirect based on role\n      if (res.data.user.role === \"admin\") {\n        navigate(\"/admin\");\n      } else if (res.data.user.role === \"examiner\") {\n        navigate(\"/examiner\");\n      } else {\n        navigate(\"/dashboard\");\n      }\n      return res.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setLoading(false);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Registration failed\");\n      throw err;\n    }\n  };\n\n  // Login user\n  const login = async credentials => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await authAPI.login(credentials);\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n      setToken(res.data.token);\n      setUser(res.data.user);\n      setLoading(false);\n\n      // Redirect based on role\n      if (res.data.user.role === \"admin\") {\n        navigate(\"/admin\");\n      } else if (res.data.user.role === \"examiner\") {\n        navigate(\"/examiner\");\n      } else {\n        navigate(\"/dashboard\");\n      }\n      return res.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setLoading(false);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Login failed\");\n      throw err;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setToken(null);\n    setUser(null);\n    navigate(\"/login\");\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await authAPI.updateProfile(userData);\n      setUser(res.data.data);\n      localStorage.setItem(\"user\", JSON.stringify(res.data.data));\n      setLoading(false);\n      return res.data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setLoading(false);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Failed to update profile\");\n      throw err;\n    }\n  };\n\n  // Update password\n  const updatePassword = async passwordData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await authAPI.updatePassword(passwordData);\n      // If token is returned, update it\n      if (res.data.token) {\n        localStorage.setItem(\"token\", res.data.token);\n        setToken(res.data.token);\n      }\n      setLoading(false);\n      return res.data;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setLoading(false);\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Failed to update password\");\n      throw err;\n    }\n  };\n\n  // Forgot password\n  const forgotPassword = async email => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await authAPI.forgotPassword(email);\n      setLoading(false);\n      return res.data;\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setLoading(false);\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || \"Failed to process forgot password request\");\n      throw err;\n    }\n  };\n\n  // Reset password\n  const resetPassword = async (token, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await authAPI.resetPassword(token, password);\n      setLoading(false);\n      return res.data;\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setLoading(false);\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || \"Failed to reset password\");\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      error,\n      register,\n      login,\n      logout,\n      updateProfile,\n      updatePassword,\n      forgotPassword,\n      resetPassword,\n      isAuthenticated: !!token,\n      isAdmin: (user === null || user === void 0 ? void 0 : user.role) === \"admin\",\n      isExaminer: (user === null || user === void 0 ? void 0 : user.role) === \"examiner\",\n      isStudent: (user === null || user === void 0 ? void 0 : user.role) === \"student\"\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"oUuW0O8nwYczQUkpLW1XvoE288k=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","createContext","useState","useEffect","authAPI","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","navigate","loadUser","res","getProfile","data","err","console","removeItem","register","userData","setItem","JSON","stringify","role","_err$response","_err$response$data","response","message","login","credentials","_err$response2","_err$response2$data","logout","updateProfile","_err$response3","_err$response3$data","updatePassword","passwordData","_err$response4","_err$response4$data","forgotPassword","email","_err$response5","_err$response5$data","resetPassword","password","_err$response6","_err$response6$data","Provider","value","isAuthenticated","isAdmin","isExaminer","isStudent","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MyDownloads/cloneonlineexamplatform1/frontend/src/context/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useState, useEffect } from \"react\"\nimport { authAPI } from \"../services/api\"\nimport { useNavigate } from \"react-router-dom\"\n\nexport const AuthContext = createContext()\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const navigate = useNavigate()\n\n  // Load user from localStorage on initial render\n  useEffect(() => {\n    const loadUser = async () => {\n      if (token) {\n        try {\n          const res = await authAPI.getProfile()\n          setUser(res.data.data)\n        } catch (err) {\n          console.error(\"Failed to load user:\", err)\n          localStorage.removeItem(\"token\")\n          localStorage.removeItem(\"user\")\n          setToken(null)\n          setUser(null)\n        }\n      }\n      setLoading(false)\n    }\n\n    loadUser()\n  }, [token])\n\n  // Register user\n  const register = async (userData) => {\n    setLoading(true)\n    setError(null)\n    try {\n      const res = await authAPI.register(userData)\n      localStorage.setItem(\"token\", res.data.token)\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user))\n      setToken(res.data.token)\n      setUser(res.data.user)\n      setLoading(false)\n\n      // Redirect based on role\n      if (res.data.user.role === \"admin\") {\n        navigate(\"/admin\")\n      } else if (res.data.user.role === \"examiner\") {\n        navigate(\"/examiner\")\n      } else {\n        navigate(\"/dashboard\")\n      }\n\n      return res.data\n    } catch (err) {\n      setLoading(false)\n      setError(err.response?.data?.message || \"Registration failed\")\n      throw err\n    }\n  }\n\n  // Login user\n  const login = async (credentials) => {\n    setLoading(true)\n    setError(null)\n    try {\n      const res = await authAPI.login(credentials)\n      localStorage.setItem(\"token\", res.data.token)\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user))\n      setToken(res.data.token)\n      setUser(res.data.user)\n      setLoading(false)\n\n      // Redirect based on role\n      if (res.data.user.role === \"admin\") {\n        navigate(\"/admin\")\n      } else if (res.data.user.role === \"examiner\") {\n        navigate(\"/examiner\")\n      } else {\n        navigate(\"/dashboard\")\n      }\n\n      return res.data\n    } catch (err) {\n      setLoading(false)\n      setError(err.response?.data?.message || \"Login failed\")\n      throw err\n    }\n  }\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"user\")\n    setToken(null)\n    setUser(null)\n    navigate(\"/login\")\n  }\n\n  // Update user profile\n  const updateProfile = async (userData) => {\n    setLoading(true)\n    setError(null)\n    try {\n      const res = await authAPI.updateProfile(userData)\n      setUser(res.data.data)\n      localStorage.setItem(\"user\", JSON.stringify(res.data.data))\n      setLoading(false)\n      return res.data\n    } catch (err) {\n      setLoading(false)\n      setError(err.response?.data?.message || \"Failed to update profile\")\n      throw err\n    }\n  }\n\n  // Update password\n  const updatePassword = async (passwordData) => {\n    setLoading(true)\n    setError(null)\n    try {\n      const res = await authAPI.updatePassword(passwordData)\n      // If token is returned, update it\n      if (res.data.token) {\n        localStorage.setItem(\"token\", res.data.token)\n        setToken(res.data.token)\n      }\n      setLoading(false)\n      return res.data\n    } catch (err) {\n      setLoading(false)\n      setError(err.response?.data?.message || \"Failed to update password\")\n      throw err\n    }\n  }\n\n  // Forgot password\n  const forgotPassword = async (email) => {\n    setLoading(true)\n    setError(null)\n    try {\n      const res = await authAPI.forgotPassword(email)\n      setLoading(false)\n      return res.data\n    } catch (err) {\n      setLoading(false)\n      setError(err.response?.data?.message || \"Failed to process forgot password request\")\n      throw err\n    }\n  }\n\n  // Reset password\n  const resetPassword = async (token, password) => {\n    setLoading(true)\n    setError(null)\n    try {\n      const res = await authAPI.resetPassword(token, password)\n      setLoading(false)\n      return res.data\n    } catch (err) {\n      setLoading(false)\n      setError(err.response?.data?.message || \"Failed to reset password\")\n      throw err\n    }\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        token,\n        loading,\n        error,\n        register,\n        login,\n        logout,\n        updateProfile,\n        updatePassword,\n        forgotPassword,\n        resetPassword,\n        isAuthenticated: !!token,\n        isAdmin: user?.role === \"admin\",\n        isExaminer: user?.role === \"examiner\",\n        isStudent: user?.role === \"student\",\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthContext\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}